@page "/counter"
@rendermode InteractiveWebAssembly
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<div role="status" style="padding-bottom: 1em;">
    Current count: <FluentBadge Appearance="Appearance.Neutral">@currentCount</FluentBadge>
</div>

<FluentButton Appearance="Appearance.Accent" @onclick="IncrementCount">Click me</FluentButton>

@code {
    private int currentCount = 0;

    protected override async Task OnInitializedAsync()
    {
        if (httpClient.BaseAddress is null)
        {
            httpClient.BaseAddress = new Uri(NavigationManager.BaseUri);
        }

        var counterRaw = await httpClient.GetStringAsync("api/counter");

        if (int.TryParse(counterRaw, out var counter))
        {
            currentCount = counter;
        }
    }

    private async void IncrementCount()
    {
        using var response = await httpClient.PostAsync("api/counter", null);
        var counterRaw = await response.Content.ReadAsStringAsync();

        if (int.TryParse(counterRaw, out var counter))
        {
            currentCount = counter;
        }
    }
}
